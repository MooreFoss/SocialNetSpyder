extends ../layout

block content
  h2 页面管理
  .page-management
    .actions
      button#createPageBtn.btn 新建页面

    // 创建页面的模态弹窗
    .modal#createPageModal
      .modal-content
        .modal-header
          h3 创建新页面
          span.close &times;
        .modal-body
          form#createPageForm.management-form
            .form-group
              label(for="title") 页面标题
              input#title(type="text" name="title" required)
            
            .form-group
              label(for="type") 页面类型
              select#type(name="type" required)
                option(value="static") 静态网页
                option(value="link") 外部链接
            
            .form-group#urlGroup(style="display: none;")
              label(for="url") 外部链接
              input#url(type="url" name="url" placeholder="https://")
            
            button(type="submit") 创建页面

    .page-list-section
      h3 页面列表
      table.page-table
        thead
          tr
            th 标题
            th ID
            th 类型
            th 创建时间
            th 状态
            th 操作
        tbody#pageList

block pageScripts
  script.
    $(document).ready(function() {
      const modal = $('#createPageModal');
      const closeBtn = $('.close');
      const createBtn = $('#createPageBtn');

      // 打开弹窗
      createBtn.click(function() {
        modal.css('display', 'block');
      });

      // 关闭弹窗
      closeBtn.click(function() {
        modal.css('display', 'none');
      });

      // 点击弹窗外部关闭
      $(window).click(function(e) {
        if (e.target === modal[0]) {
          modal.css('display', 'none');
        }
      });

      // 根据页面类型切换表单
      $('#type').change(function() {
        if ($(this).val() === 'link') {
          $('#urlGroup').show();
        } else {
          $('#urlGroup').hide();
        }
      });

      // 创建页面
      $('#createPageForm').submit(function(e) {
        e.preventDefault();
        const formData = {
          title: $('#title').val(),
          type: $('#type').val(),
          content: $('#type').val() === 'link' ? $('#url').val() : ''
        };

        $.ajax({
          type: 'POST',
          url: '/manage/tasks/create',
          data: formData,
          success: function(response) {
            Modal.alert('创建成功');
            modal.css('display', 'none');
            loadPages();
            $('#createPageForm')[0].reset();
          },
          error: function(xhr) {
            Modal.alert(xhr.responseJSON.msg || '创建失败');
          }
        });
      });

      // 加载页面列表
      function loadPages() {
        $.get('/manage/tasks/pages', function(pages) {
          const tbody = $('#pageList');
          tbody.empty();
          
          pages.forEach(page => {
            const tr = $('<tr>');
            tr.append(`<td>${page.title}</td>`);
            tr.append(`<td>${page.pageId}</td>`);
            tr.append(`<td>${page.type === 'static' ? '静态网页' : '外部链接'}</td>`);
            tr.append(`<td>${new Date(page.creationTime).toLocaleString()}</td>`);
            tr.append(`<td>${page.status ? '启用' : '禁用'}</td>`);
            
            const actions = $('<td class="actions">');
            actions.append(`<button onclick="window.open('/p/${page.pageId}', '_blank')">访问</button>`);
            
            if (page.type === 'static') {
              actions.append(` | <button onclick="window.location.href='/manage/tasks/files/${page.pageId}'">管理文件</button>`);
            }
            
            actions.append(
              ` | <button onclick="togglePageStatus('${page.pageId}', ${!page.status})">
                ${page.status ? '禁用' : '启用'}
              </button> | `
            );
            actions.append(
              `<button class="delete-btn" onclick="deletePage('${page.pageId}')">删除</button>`
            );
            
            tr.append(actions);
            tbody.append(tr);
          });
        });
      }

      // 切换页面状态
      window.togglePageStatus = function(pageId, status) {
        $.ajax({
          type: 'POST',
          url: '/manage/tasks/toggle',
          data: { pageId, status },
          success: function() {
            loadPages();
          },
          error: function(xhr) {
            Modal.alert('操作失败');
          }
        });
      }

      // 添加删除页面函数
      window.deletePage = async function(pageId) {
        const confirmed = await Modal.confirm('确定要删除此页面吗？此操作不可恢复！');
        if (confirmed) {
          $.ajax({
            type: 'POST',
            url: '/manage/tasks/delete',
            data: { pageId },
            success: function() {
              loadPages();
            },
            error: function(xhr) {
              Modal.alert('删除失败');
            }
          });
        }
      }

      // 初始加载页面列表
      loadPages();
    });